{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEyB;;;;;;;;;;;;;;;;AC5CO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yCAAK;AAChC,+BAA+B,yCAAK;AACpC;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAK;AACrC;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAK;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEgB;;;;;;;;;;;;;;;AC7ChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEiB;;;;;;;UCrEjB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNwD;AAClB;;AAEtC,qBAAqB,iEAAa;AAClC,oBAAoB,+CAAI;;AAExB;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://parallax_js/./src/classes/EventObserver.js","webpack://parallax_js/./src/classes/Game.js","webpack://parallax_js/./src/classes/Layer.js","webpack://parallax_js/webpack/bootstrap","webpack://parallax_js/webpack/runtime/define property getters","webpack://parallax_js/webpack/runtime/hasOwnProperty shorthand","webpack://parallax_js/webpack/runtime/make namespace object","webpack://parallax_js/./src/index.js"],"sourcesContent":["class EventObserver {\n  observeKeysPressed(arrayOfPressedKeys, layers) {\n    if (arrayOfPressedKeys.includes(\"ArrowRight\")) {\n      for (let i = 0; i < layers.length; i++) {\n        let layerDomElement = layers[i].getDomElement();\n        let layerCurrentX = layers[i].getXpositionI();\n        let layerMovMultiplier = layers[i].getMovementMultiplier();\n        let layerFutureX = layerCurrentX - 15 * layerMovMultiplier;\n        layerDomElement.style.backgroundPositionX = layerFutureX + \"px\";\n        layers[i].setXpositionI(layerFutureX);\n\n        layers[i].checkForTranslateForwards();\n\n        if (layers[i].getXpositionI() < layers[i].getXpositionF()) {\n          layers[i].setXpositionI(screen.width);\n        }\n      }\n    }\n\n    if (arrayOfPressedKeys.includes(\"ArrowLeft\")) {\n      for (let i = 0; i < layers.length; i++) {\n        let layerDomElement = layers[i].getDomElement();\n        let layerCurrentX = layers[i].getXpositionI();\n        let layerMovMultiplier = layers[i].getMovementMultiplier();\n        let layerFutureX = layerCurrentX + 15 * layerMovMultiplier;\n        layerDomElement.style.backgroundPositionX = layerFutureX + \"px\";\n        layers[i].setXpositionI(layerFutureX);\n\n        layers[i].checkForTranslateBackwards();\n\n        if (layers[i].getXpositionI() > screen.width) {\n          layers[i].setXpositionI(layers[i].getXpositionF());\n        }\n      }\n    }\n  }\n\n  observe(arrayOfPressedKeys, layers) {\n    setInterval(() => {\n      this.observeKeysPressed(arrayOfPressedKeys, layers);\n    }, 100);\n  }\n}\n\nexport { EventObserver };\n","import { Layer } from \"./Layer\";\n\nclass Game {\n  #starsLayer;\n  #bigPlanetLayer;\n  #farPlanetsLayer;\n  #ringPlanetLayer;\n  constructor() {\n    this.#starsLayer = new Layer(0, -screen.width, document.getElementById(\"bg-space-stars\"), 0.1);\n    this.#bigPlanetLayer = new Layer(\n      900,\n      -333,\n      document.getElementById(\"bg-space-big-planet\"),\n      0.3\n    );\n    this.#farPlanetsLayer = new Layer(\n      100,\n      -750,\n      document.getElementById(\"bg-space-far-planets\"),\n      0.7\n    );\n    this.#ringPlanetLayer = new Layer(0, -180, document.getElementById(\"bg-space-ring-planet\"), 1);\n  }\n\n  getStarsLayer() {\n    return this.#starsLayer;\n  }\n\n  getBigPlanetLayer() {\n    return this.#bigPlanetLayer;\n  }\n\n  getFarPlanetsLayer() {\n    return this.#farPlanetsLayer;\n  }\n\n  getRingPlanetLayer() {\n    return this.#ringPlanetLayer;\n  }\n\n  getArrayOfLayers() {\n    return [this.#starsLayer, this.#bigPlanetLayer, this.#farPlanetsLayer, this.#ringPlanetLayer];\n  }\n}\n\nexport { Game };\n","class Layer {\n  #initialXposition;\n  #finalXposition;\n  #domElement;\n  #movementMultiplier;\n  constructor(initialXposition, finalXposition, domElement, movementMultiplier) {\n    this.#initialXposition = initialXposition;\n    this.#finalXposition = finalXposition;\n    this.#domElement = domElement;\n    this.#movementMultiplier = movementMultiplier;\n  }\n\n  getXpositionI() {\n    return this.#initialXposition;\n  }\n\n  setXpositionI(newXValue) {\n    this.#initialXposition = newXValue;\n  }\n\n  getXpositionF() {\n    return this.#finalXposition;\n  }\n\n  setXpositionF(newXValue) {\n    this.#finalXposition = newXValue;\n  }\n\n  getDomElement() {\n    return this.#domElement;\n  }\n\n  setDomElement(newDomValue) {\n    this.#domElement = newDomValue;\n  }\n\n  getMovementMultiplier() {\n    return this.#movementMultiplier;\n  }\n\n  setMovementMultiplier(newMultiplierValue) {\n    this.#domElement = newMultiplierValue;\n  }\n\n  checkForTranslateForwards() {\n    if (\n      this.getXpositionI() < this.getXpositionF() - 30 ||\n      this.getXpositionI() > screen.width - 30\n    ) {\n      this.#domElement.classList.remove(\"transition-effect\");\n    } else if (this.getXpositionI() < screen.width - this.getXpositionF() - 80) {\n      this.#domElement.classList.add(\"transition-effect\");\n    }\n  }\n\n  checkForTranslateBackwards() {\n    console.log(this.getXpositionI());\n    console.log(this.getXpositionF());\n    if (\n      this.getXpositionI() > screen.width - 30 ||\n      this.getXpositionI() < this.getXpositionF() - 30\n    ) {\n      this.#domElement.classList.remove(\"transition-effect\");\n    } else if (this.getXpositionI() > this.getXpositionF() + 80) {\n      this.#domElement.classList.add(\"transition-effect\");\n    }\n  }\n}\n\nexport { Layer };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { EventObserver } from \"./classes/EventObserver\";\nimport { Game } from \"./classes/Game\";\n\nconst EventObs = new EventObserver();\nconst NewGame = new Game();\n\nconst pressedKeys = [];\n\ndocument.addEventListener(\"keydown\", (e) => {\n  addPressedKey(e);\n});\n\ndocument.addEventListener(\"keyup\", (e) => {\n  removePressedKey(e);\n});\n\nfunction addPressedKey(e) {\n  if (!pressedKeys.includes(e.code)) {\n    pressedKeys.push(e.code);\n  }\n}\n\nfunction removePressedKey(e) {\n  if (pressedKeys.includes(e.code)) {\n    let i = pressedKeys.indexOf(e.code);\n    pressedKeys.splice(i, 1);\n  }\n}\n\nEventObs.observe(pressedKeys, NewGame.getArrayOfLayers());\n"],"names":[],"sourceRoot":""}