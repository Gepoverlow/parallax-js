{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEyB;;;;;;;;;;;;;;;;;AClCO;AACQ;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,yCAAK;AAChC,+BAA+B,yCAAK;AACpC,gCAAgC,yCAAK;AACrC,gCAAgC,yCAAK;;AAErC,0BAA0B,iDAAS;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEgB;;;;;;;;;;;;;;;AC5ChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEiB;;;;;;;;;;;;;;;AC3FjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACmB;;;;;;;;;;;;;;;;AC9EiB;;AAEpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,6CAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEqB;;;;;;;UC3ErB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNwD;AAClB;;AAEtC,qBAAqB,iEAAa;AAClC,oBAAoB,+CAAI;;AAExB;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://parallax_js/./src/classes/EventObserver.js","webpack://parallax_js/./src/classes/Game.js","webpack://parallax_js/./src/classes/Layer.js","webpack://parallax_js/./src/classes/Missile.js","webpack://parallax_js/./src/classes/Spaceship.js","webpack://parallax_js/webpack/bootstrap","webpack://parallax_js/webpack/runtime/define property getters","webpack://parallax_js/webpack/runtime/hasOwnProperty shorthand","webpack://parallax_js/webpack/runtime/make namespace object","webpack://parallax_js/./src/index.js"],"sourcesContent":["class EventObserver {\n  observeKeysPressed(arrayOfPressedKeys, layers, spaceship) {\n    if (arrayOfPressedKeys.includes(\"ArrowRight\")) {\n      for (let i = 0; i < layers.length; i++) {\n        layers[i].moveLayerRight();\n      }\n    }\n\n    if (arrayOfPressedKeys.includes(\"ArrowLeft\")) {\n      for (let i = 0; i < layers.length; i++) {\n        layers[i].moveLayerLeft();\n      }\n    }\n\n    if (arrayOfPressedKeys.includes(\"ArrowUp\")) {\n      spaceship.moveUp();\n    }\n\n    if (arrayOfPressedKeys.includes(\"ArrowDown\")) {\n      spaceship.moveDown();\n    }\n\n    if (arrayOfPressedKeys.includes(\"Space\")) {\n      spaceship.handleMissile();\n    }\n  }\n\n  observe(arrayOfPressedKeys, layers, spaceship) {\n    setInterval(() => {\n      this.observeKeysPressed(arrayOfPressedKeys, layers, spaceship);\n    }, 100);\n  }\n}\n\nexport { EventObserver };\n","import { Layer } from \"./Layer\";\nimport { Spaceship } from \"./Spaceship\";\n\nclass Game {\n  #starsLayer;\n  #bigPlanetLayer;\n  #farPlanetsLayer;\n  #ringPlanetLayer;\n\n  #spaceShip;\n  constructor() {\n    this.#starsLayer = new Layer(0, -screen.width, document.getElementById(\"bg-space-stars\"), 0.1);\n    this.#bigPlanetLayer = new Layer(900, -333, document.getElementById(\"bg-space-big-planet\"), 0.3);\n    this.#farPlanetsLayer = new Layer(100, -750, document.getElementById(\"bg-space-far-planets\"), 0.7);\n    this.#ringPlanetLayer = new Layer(0, -180, document.getElementById(\"bg-space-ring-planet\"), 1);\n\n    this.#spaceShip = new Spaceship();\n  }\n\n  getStarsLayer() {\n    return this.#starsLayer;\n  }\n\n  getBigPlanetLayer() {\n    return this.#bigPlanetLayer;\n  }\n\n  getFarPlanetsLayer() {\n    return this.#farPlanetsLayer;\n  }\n\n  getRingPlanetLayer() {\n    return this.#ringPlanetLayer;\n  }\n\n  getArrayOfLayers() {\n    return [this.#starsLayer, this.#bigPlanetLayer, this.#farPlanetsLayer, this.#ringPlanetLayer];\n  }\n\n  getSpaceship() {\n    return this.#spaceShip;\n  }\n}\n\nexport { Game };\n","class Layer {\n  #initialXposition;\n  #finalXposition;\n  #domElement;\n  #movementMultiplier;\n  constructor(initialXposition, finalXposition, domElement, movementMultiplier) {\n    this.#initialXposition = initialXposition;\n    this.#finalXposition = finalXposition;\n    this.#domElement = domElement;\n    this.#movementMultiplier = movementMultiplier;\n  }\n\n  getXpositionI() {\n    return this.#initialXposition;\n  }\n\n  setXpositionI(newXValue) {\n    this.#initialXposition = newXValue;\n  }\n\n  getXpositionF() {\n    return this.#finalXposition;\n  }\n\n  setXpositionF(newXValue) {\n    this.#finalXposition = newXValue;\n  }\n\n  getDomElement() {\n    return this.#domElement;\n  }\n\n  setDomElement(newDomValue) {\n    this.#domElement = newDomValue;\n  }\n\n  getMovementMultiplier() {\n    return this.#movementMultiplier;\n  }\n\n  setMovementMultiplier(newMultiplierValue) {\n    this.#domElement = newMultiplierValue;\n  }\n\n  checkForTranslateForwards() {\n    if (this.getXpositionI() < this.getXpositionF() - 30 || this.getXpositionI() > screen.width - 30) {\n      this.#domElement.classList.remove(\"transition-effect\");\n    } else if (this.getXpositionI() < screen.width - this.getXpositionF() - 80) {\n      this.#domElement.classList.add(\"transition-effect\");\n    }\n  }\n\n  checkForTranslateBackwards() {\n    if (this.getXpositionI() > screen.width - 30 || this.getXpositionI() < this.getXpositionF() - 30) {\n      this.#domElement.classList.remove(\"transition-effect\");\n    } else if (this.getXpositionI() > this.getXpositionF() + 80) {\n      this.#domElement.classList.add(\"transition-effect\");\n    }\n  }\n\n  moveLayerRight() {\n    let layerDomElement = this.getDomElement();\n    let layerCurrentX = this.getXpositionI();\n    let layerMovMultiplier = this.getMovementMultiplier();\n    let layerFutureX = layerCurrentX - 15 * layerMovMultiplier;\n    layerDomElement.style.backgroundPositionX = layerFutureX + \"px\";\n    this.setXpositionI(layerFutureX);\n\n    this.checkForTranslateForwards();\n\n    if (this.getXpositionI() < this.getXpositionF()) {\n      this.setXpositionI(screen.width);\n    }\n  }\n\n  moveLayerLeft() {\n    let layerDomElement = this.getDomElement();\n    let layerCurrentX = this.getXpositionI();\n    let layerMovMultiplier = this.getMovementMultiplier();\n    let layerFutureX = layerCurrentX + 15 * layerMovMultiplier;\n    layerDomElement.style.backgroundPositionX = layerFutureX + \"px\";\n    this.setXpositionI(layerFutureX);\n\n    this.checkForTranslateBackwards();\n\n    if (this.getXpositionI() > screen.width) {\n      this.setXpositionI(this.getXpositionF());\n    }\n  }\n}\n\nexport { Layer };\n","class Missile {\n  #xPosition;\n  #yPosition;\n  #domElement;\n  #hasImpacted;\n  constructor(startingXposition, startingYposition) {\n    this.#xPosition = startingXposition;\n    this.#yPosition = startingYposition;\n    this.#domElement = this.createDomElement();\n    this.#hasImpacted = false;\n  }\n\n  getXposition() {\n    return this.#xPosition;\n  }\n\n  setXposition(newX) {\n    this.#xPosition = newX;\n  }\n\n  getYposition() {\n    return this.#yPosition;\n  }\n\n  setYposition(newY) {\n    this.#xPosition = newY;\n  }\n\n  getDomElement() {\n    return this.#domElement;\n  }\n\n  setDomElement(newDom) {\n    this.setDomElement = newDom;\n  }\n\n  getHasImpacted() {\n    return this.#hasImpacted;\n  }\n\n  setHasImpacted(bool) {\n    this.#hasImpacted = bool;\n  }\n\n  startTrajectory() {\n    this.checkIfImpacted();\n\n    if (!this.getHasImpacted()) {\n      let domElement = this.getDomElement();\n      let currentX = this.getXposition();\n      let nextX = currentX + 5;\n      this.setXposition(nextX);\n      domElement.style.backgroundPositionX = nextX + \"px\";\n\n      setTimeout(() => {\n        this.startTrajectory();\n      }, 50);\n    } else {\n      let domElement = this.getDomElement();\n      document.getElementById(\"container-all\").removeChild(domElement);\n    }\n  }\n\n  checkIfImpacted() {\n    if (this.getXposition() > screen.width) {\n      this.setHasImpacted(true);\n    }\n  }\n\n  createDomElement() {\n    let missile = document.createElement(\"div\");\n    missile.className = \"missile\";\n    missile.style.backgroundPositionX = this.getXposition() + 50 + \"px\";\n    missile.style.backgroundPositionY = this.getYposition() + 33 + \"px\";\n    document.getElementById(\"container-all\").appendChild(missile);\n    return missile;\n  }\n}\nexport { Missile };\n","import { Missile } from \"./Missile\";\n\nclass Spaceship {\n  #bgPositionX;\n  #bgPositionY;\n  #domElement;\n\n  #movSpeed;\n\n  constructor() {\n    this.#bgPositionX = 200;\n    this.#bgPositionY = 200;\n    this.#domElement = document.getElementById(\"spaceship\");\n    this.#movSpeed = 40;\n  }\n\n  moveUp() {\n    if (this.getYposition() > 0) {\n      let spaceshipDomElement = this.getDomElement();\n      let previousYposition = this.getYposition();\n      let futureYposition = previousYposition - this.getMovSpeed();\n      this.setYposition(futureYposition);\n      spaceshipDomElement.style.backgroundPositionY = futureYposition + \"px\";\n    }\n  }\n\n  moveDown() {\n    if (this.getYposition() < window.innerHeight - 100) {\n      let spaceshipDomElement = this.getDomElement();\n      let previousYposition = this.getYposition();\n      let futureYposition = previousYposition + this.getMovSpeed();\n      this.setYposition(futureYposition);\n      spaceshipDomElement.style.backgroundPositionY = futureYposition + \"px\";\n    }\n  }\n\n  handleMissile() {\n    let missile = new Missile(this.getXposition(), this.getYposition());\n    missile.startTrajectory();\n    this.shootMissile(missile);\n  }\n\n  shootMissile(missileObject) {\n    console.log(missileObject);\n  }\n\n  getXposition() {\n    return this.#bgPositionX;\n  }\n\n  setXposition(newX) {\n    this.#bgPositionX = newX;\n  }\n\n  getYposition() {\n    return this.#bgPositionY;\n  }\n\n  setYposition(newY) {\n    this.#bgPositionY = newY;\n  }\n\n  getDomElement() {\n    return this.#domElement;\n  }\n\n  getMovSpeed() {\n    return this.#movSpeed;\n  }\n\n  setMovSpeed(newSpeed) {\n    this.#movSpeed = newSpeed;\n  }\n}\n\nexport { Spaceship };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { EventObserver } from \"./classes/EventObserver\";\nimport { Game } from \"./classes/Game\";\n\nconst EventObs = new EventObserver();\nconst NewGame = new Game();\n\nconst pressedKeys = [];\n\ndocument.addEventListener(\"keydown\", (e) => {\n  addPressedKey(e);\n});\n\ndocument.addEventListener(\"keyup\", (e) => {\n  removePressedKey(e);\n});\n\nfunction addPressedKey(e) {\n  if (!pressedKeys.includes(e.code)) {\n    pressedKeys.push(e.code);\n  }\n}\n\nfunction removePressedKey(e) {\n  if (pressedKeys.includes(e.code)) {\n    let i = pressedKeys.indexOf(e.code);\n    pressedKeys.splice(i, 1);\n  }\n}\n\nEventObs.observe(pressedKeys, NewGame.getArrayOfLayers(), NewGame.getSpaceship());\n"],"names":[],"sourceRoot":""}